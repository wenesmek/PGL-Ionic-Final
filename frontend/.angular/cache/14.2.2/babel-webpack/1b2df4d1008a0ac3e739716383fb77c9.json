{"ast":null,"code":"/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.1\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    g.localforage = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof require == \"function\" && require;\n          if (!u && a) return a(o, !0);\n          if (i) return i(o, !0);\n          var f = new Error(\"Cannot find module '\" + o + \"'\");\n          throw f.code = \"MODULE_NOT_FOUND\", f;\n        }\n\n        var l = n[o] = {\n          exports: {}\n        };\n        t[o][0].call(l.exports, function (e) {\n          var n = t[o][1][e];\n          return s(n ? n : e);\n        }, l, l.exports, e, t, n, r);\n      }\n\n      return n[o].exports;\n    }\n\n    var i = typeof require == \"function\" && require;\n\n    for (var o = 0; o < r.length; o++) s(r[o]);\n\n    return s;\n  }({\n    1: [function (_dereq_, module, exports) {\n      (function (global) {\n        'use strict';\n\n        var Mutation = global.MutationObserver || global.WebKitMutationObserver;\n        var scheduleDrain;\n        {\n          if (Mutation) {\n            var called = 0;\n            var observer = new Mutation(nextTick);\n            var element = global.document.createTextNode('');\n            observer.observe(element, {\n              characterData: true\n            });\n\n            scheduleDrain = function () {\n              element.data = called = ++called % 2;\n            };\n          } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n            var channel = new global.MessageChannel();\n            channel.port1.onmessage = nextTick;\n\n            scheduleDrain = function () {\n              channel.port2.postMessage(0);\n            };\n          } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n            scheduleDrain = function () {\n              // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n              // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n              var scriptEl = global.document.createElement('script');\n\n              scriptEl.onreadystatechange = function () {\n                nextTick();\n                scriptEl.onreadystatechange = null;\n                scriptEl.parentNode.removeChild(scriptEl);\n                scriptEl = null;\n              };\n\n              global.document.documentElement.appendChild(scriptEl);\n            };\n          } else {\n            scheduleDrain = function () {\n              setTimeout(nextTick, 0);\n            };\n          }\n        }\n        var draining;\n        var queue = []; //named nextTick for less confusing stack traces\n\n        function nextTick() {\n          draining = true;\n          var i, oldQueue;\n          var len = queue.length;\n\n          while (len) {\n            oldQueue = queue;\n            queue = [];\n            i = -1;\n\n            while (++i < len) {\n              oldQueue[i]();\n            }\n\n            len = queue.length;\n          }\n\n          draining = false;\n        }\n\n        module.exports = immediate;\n\n        function immediate(task) {\n          if (queue.push(task) === 1 && !draining) {\n            scheduleDrain();\n          }\n        }\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {}],\n    2: [function (_dereq_, module, exports) {\n      'use strict';\n\n      var immediate = _dereq_(1);\n      /* istanbul ignore next */\n\n\n      function INTERNAL() {}\n\n      var handlers = {};\n      var REJECTED = ['REJECTED'];\n      var FULFILLED = ['FULFILLED'];\n      var PENDING = ['PENDING'];\n      module.exports = Promise;\n\n      function Promise(resolver) {\n        if (typeof resolver !== 'function') {\n          throw new TypeError('resolver must be a function');\n        }\n\n        this.state = PENDING;\n        this.queue = [];\n        this.outcome = void 0;\n\n        if (resolver !== INTERNAL) {\n          safelyResolveThenable(this, resolver);\n        }\n      }\n\n      Promise.prototype[\"catch\"] = function (onRejected) {\n        return this.then(null, onRejected);\n      };\n\n      Promise.prototype.then = function (onFulfilled, onRejected) {\n        if (typeof onFulfilled !== 'function' && this.state === FULFILLED || typeof onRejected !== 'function' && this.state === REJECTED) {\n          return this;\n        }\n\n        var promise = new this.constructor(INTERNAL);\n\n        if (this.state !== PENDING) {\n          var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n          unwrap(promise, resolver, this.outcome);\n        } else {\n          this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n        }\n\n        return promise;\n      };\n\n      function QueueItem(promise, onFulfilled, onRejected) {\n        this.promise = promise;\n\n        if (typeof onFulfilled === 'function') {\n          this.onFulfilled = onFulfilled;\n          this.callFulfilled = this.otherCallFulfilled;\n        }\n\n        if (typeof onRejected === 'function') {\n          this.onRejected = onRejected;\n          this.callRejected = this.otherCallRejected;\n        }\n      }\n\n      QueueItem.prototype.callFulfilled = function (value) {\n        handlers.resolve(this.promise, value);\n      };\n\n      QueueItem.prototype.otherCallFulfilled = function (value) {\n        unwrap(this.promise, this.onFulfilled, value);\n      };\n\n      QueueItem.prototype.callRejected = function (value) {\n        handlers.reject(this.promise, value);\n      };\n\n      QueueItem.prototype.otherCallRejected = function (value) {\n        unwrap(this.promise, this.onRejected, value);\n      };\n\n      function unwrap(promise, func, value) {\n        immediate(function () {\n          var returnValue;\n\n          try {\n            returnValue = func(value);\n          } catch (e) {\n            return handlers.reject(promise, e);\n          }\n\n          if (returnValue === promise) {\n            handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n          } else {\n            handlers.resolve(promise, returnValue);\n          }\n        });\n      }\n\n      handlers.resolve = function (self, value) {\n        var result = tryCatch(getThen, value);\n\n        if (result.status === 'error') {\n          return handlers.reject(self, result.value);\n        }\n\n        var thenable = result.value;\n\n        if (thenable) {\n          safelyResolveThenable(self, thenable);\n        } else {\n          self.state = FULFILLED;\n          self.outcome = value;\n          var i = -1;\n          var len = self.queue.length;\n\n          while (++i < len) {\n            self.queue[i].callFulfilled(value);\n          }\n        }\n\n        return self;\n      };\n\n      handlers.reject = function (self, error) {\n        self.state = REJECTED;\n        self.outcome = error;\n        var i = -1;\n        var len = self.queue.length;\n\n        while (++i < len) {\n          self.queue[i].callRejected(error);\n        }\n\n        return self;\n      };\n\n      function getThen(obj) {\n        // Make sure we only access the accessor once as required by the spec\n        var then = obj && obj.then;\n\n        if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n          return function appyThen() {\n            then.apply(obj, arguments);\n          };\n        }\n      }\n\n      function safelyResolveThenable(self, thenable) {\n        // Either fulfill, reject or reject with error\n        var called = false;\n\n        function onError(value) {\n          if (called) {\n            return;\n          }\n\n          called = true;\n          handlers.reject(self, value);\n        }\n\n        function onSuccess(value) {\n          if (called) {\n            return;\n          }\n\n          called = true;\n          handlers.resolve(self, value);\n        }\n\n        function tryToUnwrap() {\n          thenable(onSuccess, onError);\n        }\n\n        var result = tryCatch(tryToUnwrap);\n\n        if (result.status === 'error') {\n          onError(result.value);\n        }\n      }\n\n      function tryCatch(func, value) {\n        var out = {};\n\n        try {\n          out.value = func(value);\n          out.status = 'success';\n        } catch (e) {\n          out.status = 'error';\n          out.value = e;\n        }\n\n        return out;\n      }\n\n      Promise.resolve = resolve;\n\n      function resolve(value) {\n        if (value instanceof this) {\n          return value;\n        }\n\n        return handlers.resolve(new this(INTERNAL), value);\n      }\n\n      Promise.reject = reject;\n\n      function reject(reason) {\n        var promise = new this(INTERNAL);\n        return handlers.reject(promise, reason);\n      }\n\n      Promise.all = all;\n\n      function all(iterable) {\n        var self = this;\n\n        if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n          return this.reject(new TypeError('must be an array'));\n        }\n\n        var len = iterable.length;\n        var called = false;\n\n        if (!len) {\n          return this.resolve([]);\n        }\n\n        var values = new Array(len);\n        var resolved = 0;\n        var i = -1;\n        var promise = new this(INTERNAL);\n\n        while (++i < len) {\n          allResolver(iterable[i], i);\n        }\n\n        return promise;\n\n        function allResolver(value, i) {\n          self.resolve(value).then(resolveFromAll, function (error) {\n            if (!called) {\n              called = true;\n              handlers.reject(promise, error);\n            }\n          });\n\n          function resolveFromAll(outValue) {\n            values[i] = outValue;\n\n            if (++resolved === len && !called) {\n              called = true;\n              handlers.resolve(promise, values);\n            }\n          }\n        }\n      }\n\n      Promise.race = race;\n\n      function race(iterable) {\n        var self = this;\n\n        if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n          return this.reject(new TypeError('must be an array'));\n        }\n\n        var len = iterable.length;\n        var called = false;\n\n        if (!len) {\n          return this.resolve([]);\n        }\n\n        var i = -1;\n        var promise = new this(INTERNAL);\n\n        while (++i < len) {\n          resolver(iterable[i]);\n        }\n\n        return promise;\n\n        function resolver(value) {\n          self.resolve(value).then(function (response) {\n            if (!called) {\n              called = true;\n              handlers.resolve(promise, response);\n            }\n          }, function (error) {\n            if (!called) {\n              called = true;\n              handlers.reject(promise, error);\n            }\n          });\n        }\n      }\n    }, {\n      \"1\": 1\n    }],\n    3: [function (_dereq_, module, exports) {\n      (function (global) {\n        'use strict';\n\n        if (typeof global.Promise !== 'function') {\n          global.Promise = _dereq_(2);\n        }\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {\n      \"2\": 2\n    }],\n    4: [function (_dereq_, module, exports) {\n      'use strict';\n\n      var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n      } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function getIDB() {\n        /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n        try {\n          if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n          }\n\n          if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n          }\n\n          if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n          }\n\n          if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n          }\n\n          if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n          }\n        } catch (e) {\n          return;\n        }\n      }\n\n      var idb = getIDB();\n\n      function isIndexedDBValid() {\n        try {\n          // Initialize IndexedDB; fall back to vendor-prefixed versions\n          // if needed.\n          if (!idb) {\n            return false;\n          } // We mimic PouchDB here;\n          //\n          // We test for openDatabase because IE Mobile identifies itself\n          // as Safari. Oh the lulz...\n\n\n          var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n          var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1; // Safari <10.1 does not meet our requirements for IDB support (#5572)\n          // since Safari 10.1 shipped with fetch, we can use that to detect it\n\n          return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' && // some outdated implementations of IDB that appear on Samsung\n          // and HTC Android devices <4.4 are missing IDBKeyRange\n          // See: https://github.com/mozilla/localForage/issues/128\n          // See: https://github.com/mozilla/localForage/issues/272\n          typeof IDBKeyRange !== 'undefined';\n        } catch (e) {\n          return false;\n        }\n      } // Abstracts constructing a Blob object, so it also works in older\n      // browsers that don't support the native Blob constructor. (i.e.\n      // old QtWebKit versions, at least).\n      // Abstracts constructing a Blob object, so it also works in older\n      // browsers that don't support the native Blob constructor. (i.e.\n      // old QtWebKit versions, at least).\n\n\n      function createBlob(parts, properties) {\n        /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n        parts = parts || [];\n        properties = properties || {};\n\n        try {\n          return new Blob(parts, properties);\n        } catch (e) {\n          if (e.name !== 'TypeError') {\n            throw e;\n          }\n\n          var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n          var builder = new Builder();\n\n          for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n          }\n\n          return builder.getBlob(properties.type);\n        }\n      } // This is CommonJS because lie is an external dependency, so Rollup\n      // can just ignore it.\n\n\n      if (typeof Promise === 'undefined') {\n        // In the \"nopromises\" build this will just throw if you don't have\n        // a global promise object, but it would throw anyway later.\n        _dereq_(3);\n      }\n\n      var Promise$1 = Promise;\n\n      function executeCallback(promise, callback) {\n        if (callback) {\n          promise.then(function (result) {\n            callback(null, result);\n          }, function (error) {\n            callback(error);\n          });\n        }\n      }\n\n      function executeTwoCallbacks(promise, callback, errorCallback) {\n        if (typeof callback === 'function') {\n          promise.then(callback);\n        }\n\n        if (typeof errorCallback === 'function') {\n          promise[\"catch\"](errorCallback);\n        }\n      }\n\n      function normalizeKey(key) {\n        // Cast the key to a string, as that's all we can set as a key.\n        if (typeof key !== 'string') {\n          console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        return key;\n      }\n\n      function getCallback() {\n        if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n          return arguments[arguments.length - 1];\n        }\n      } // Some code originally from async_storage.js in\n      // [Gaia](https://github.com/mozilla-b2g/gaia).\n\n\n      var DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\n      var supportsBlobs = void 0;\n      var dbContexts = {};\n      var toString = Object.prototype.toString; // Transaction Modes\n\n      var READ_ONLY = 'readonly';\n      var READ_WRITE = 'readwrite'; // Transform a binary string to an array buffer, because otherwise\n      // weird stuff happens when you try to work with the binary string directly.\n      // It is known.\n      // From http://stackoverflow.com/questions/14967647/ (continues on next line)\n      // encode-decode-image-with-base64-breaks-image (2013-04-21)\n\n      function _binStringToArrayBuffer(bin) {\n        var length = bin.length;\n        var buf = new ArrayBuffer(length);\n        var arr = new Uint8Array(buf);\n\n        for (var i = 0; i < length; i++) {\n          arr[i] = bin.charCodeAt(i);\n        }\n\n        return buf;\n      } //\n      // Blobs are not supported in all versions of IndexedDB, notably\n      // Chrome <37 and Android <5. In those versions, storing a blob will throw.\n      //\n      // Various other blob bugs exist in Chrome v37-42 (inclusive).\n      // Detecting them is expensive and confusing to users, and Chrome 37-42\n      // is at very low usage worldwide, so we do a hacky userAgent check instead.\n      //\n      // content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n      // 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n      // FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n      //\n      // Code borrowed from PouchDB. See:\n      // https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n      //\n\n\n      function _checkBlobSupportWithoutCaching(idb) {\n        return new Promise$1(function (resolve) {\n          var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n          var blob = createBlob(['']);\n          txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n          txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n          };\n\n          txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//); // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n          };\n        })[\"catch\"](function () {\n          return false; // error, so assume unsupported\n        });\n      }\n\n      function _checkBlobSupport(idb) {\n        if (typeof supportsBlobs === 'boolean') {\n          return Promise$1.resolve(supportsBlobs);\n        }\n\n        return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n          supportsBlobs = value;\n          return supportsBlobs;\n        });\n      }\n\n      function _deferReadiness(dbInfo) {\n        var dbContext = dbContexts[dbInfo.name]; // Create a deferred object representing the current database operation.\n\n        var deferredOperation = {};\n        deferredOperation.promise = new Promise$1(function (resolve, reject) {\n          deferredOperation.resolve = resolve;\n          deferredOperation.reject = reject;\n        }); // Enqueue the deferred operation.\n\n        dbContext.deferredOperations.push(deferredOperation); // Chain its promise to the database readiness.\n\n        if (!dbContext.dbReady) {\n          dbContext.dbReady = deferredOperation.promise;\n        } else {\n          dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n          });\n        }\n      }\n\n      function _advanceReadiness(dbInfo) {\n        var dbContext = dbContexts[dbInfo.name]; // Dequeue a deferred operation.\n\n        var deferredOperation = dbContext.deferredOperations.pop(); // Resolve its promise (which is part of the database readiness\n        // chain of promises).\n\n        if (deferredOperation) {\n          deferredOperation.resolve();\n          return deferredOperation.promise;\n        }\n      }\n\n      function _rejectReadiness(dbInfo, err) {\n        var dbContext = dbContexts[dbInfo.name]; // Dequeue a deferred operation.\n\n        var deferredOperation = dbContext.deferredOperations.pop(); // Reject its promise (which is part of the database readiness\n        // chain of promises).\n\n        if (deferredOperation) {\n          deferredOperation.reject(err);\n          return deferredOperation.promise;\n        }\n      }\n\n      function _getConnection(dbInfo, upgradeNeeded) {\n        return new Promise$1(function (resolve, reject) {\n          dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n          if (dbInfo.db) {\n            if (upgradeNeeded) {\n              _deferReadiness(dbInfo);\n\n              dbInfo.db.close();\n            } else {\n              return resolve(dbInfo.db);\n            }\n          }\n\n          var dbArgs = [dbInfo.name];\n\n          if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n          }\n\n          var openreq = idb.open.apply(idb, dbArgs);\n\n          if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n              var db = openreq.result;\n\n              try {\n                db.createObjectStore(dbInfo.storeName);\n\n                if (e.oldVersion <= 1) {\n                  // Added when support for blob shims was added\n                  db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                }\n              } catch (ex) {\n                if (ex.name === 'ConstraintError') {\n                  console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                } else {\n                  throw ex;\n                }\n              }\n            };\n          }\n\n          openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n          };\n\n          openreq.onsuccess = function () {\n            resolve(openreq.result);\n\n            _advanceReadiness(dbInfo);\n          };\n        });\n      }\n\n      function _getOriginalConnection(dbInfo) {\n        return _getConnection(dbInfo, false);\n      }\n\n      function _getUpgradedConnection(dbInfo) {\n        return _getConnection(dbInfo, true);\n      }\n\n      function _isUpgradeNeeded(dbInfo, defaultVersion) {\n        if (!dbInfo.db) {\n          return true;\n        }\n\n        var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n        var isDowngrade = dbInfo.version < dbInfo.db.version;\n        var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n        if (isDowngrade) {\n          // If the version is not the default one\n          // then warn for impossible downgrade.\n          if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n          } // Align the versions to prevent errors.\n\n\n          dbInfo.version = dbInfo.db.version;\n        }\n\n        if (isUpgrade || isNewStore) {\n          // If the store is new then increment the version (if needed).\n          // This will trigger an \"upgradeneeded\" event which is required\n          // for creating a store.\n          if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n\n            if (incVersion > dbInfo.version) {\n              dbInfo.version = incVersion;\n            }\n          }\n\n          return true;\n        }\n\n        return false;\n      } // encode a blob for indexeddb engines that don't support blobs\n\n\n      function _encodeBlob(blob) {\n        return new Promise$1(function (resolve, reject) {\n          var reader = new FileReader();\n          reader.onerror = reject;\n\n          reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n              __local_forage_encoded_blob: true,\n              data: base64,\n              type: blob.type\n            });\n          };\n\n          reader.readAsBinaryString(blob);\n        });\n      } // decode an encoded blob\n\n\n      function _decodeBlob(encodedBlob) {\n        var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n\n        return createBlob([arrayBuff], {\n          type: encodedBlob.type\n        });\n      } // is this one of our fancy encoded blobs?\n\n\n      function _isEncodedBlob(value) {\n        return value && value.__local_forage_encoded_blob;\n      } // Specialize the default `ready()` function by making it dependent\n      // on the current database operations. Thus, the driver will be actually\n      // ready when it's been initialized (default) *and* there are no pending\n      // operations on the database (initiated by some other instances).\n\n\n      function _fullyReady(callback) {\n        var self = this;\n\n        var promise = self._initReady().then(function () {\n          var dbContext = dbContexts[self._dbInfo.name];\n\n          if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n          }\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n      } // Try to establish a new db connection to replace the\n      // current one which is broken (i.e. experiencing\n      // InvalidStateError while creating a transaction).\n\n\n      function _tryReconnect(dbInfo) {\n        _deferReadiness(dbInfo);\n\n        var dbContext = dbContexts[dbInfo.name];\n        var forages = dbContext.forages;\n\n        for (var i = 0; i < forages.length; i++) {\n          var forage = forages[i];\n\n          if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n\n            forage._dbInfo.db = null;\n          }\n        }\n\n        dbInfo.db = null;\n        return _getOriginalConnection(dbInfo).then(function (db) {\n          dbInfo.db = db;\n\n          if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n          }\n\n          return db;\n        }).then(function (db) {\n          // store the latest db reference\n          // in case the db was upgraded\n          dbInfo.db = dbContext.db = db;\n\n          for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n          }\n        })[\"catch\"](function (err) {\n          _rejectReadiness(dbInfo, err);\n\n          throw err;\n        });\n      } // FF doesn't like Promises (micro-tasks) and IDDB store operations,\n      // so we have to do it with callbacks\n\n\n      function createTransaction(dbInfo, mode, callback, retries) {\n        if (retries === undefined) {\n          retries = 1;\n        }\n\n        try {\n          var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n          callback(null, tx);\n        } catch (err) {\n          if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n              if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                // increase the db version, to create the new ObjectStore\n                if (dbInfo.db) {\n                  dbInfo.version = dbInfo.db.version + 1;\n                } // Reopen the database for upgrading.\n\n\n                return _getUpgradedConnection(dbInfo);\n              }\n            }).then(function () {\n              return _tryReconnect(dbInfo).then(function () {\n                createTransaction(dbInfo, mode, callback, retries - 1);\n              });\n            })[\"catch\"](callback);\n          }\n\n          callback(err);\n        }\n      }\n\n      function createDbContext() {\n        return {\n          // Running localForages sharing a database.\n          forages: [],\n          // Shared database.\n          db: null,\n          // Database readiness (promise).\n          dbReady: null,\n          // Deferred operations on the database.\n          deferredOperations: []\n        };\n      } // Open the IndexedDB database (automatically creates one if one didn't\n      // previously exist), using any options set in the config.\n\n\n      function _initStorage(options) {\n        var self = this;\n        var dbInfo = {\n          db: null\n        };\n\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = options[i];\n          }\n        } // Get the current context of the database;\n\n\n        var dbContext = dbContexts[dbInfo.name]; // ...or create a new context.\n\n        if (!dbContext) {\n          dbContext = createDbContext(); // Register the new context in the global container.\n\n          dbContexts[dbInfo.name] = dbContext;\n        } // Register itself as a running localForage in the current context.\n\n\n        dbContext.forages.push(self); // Replace the default `ready()` function with the specialized one.\n\n        if (!self._initReady) {\n          self._initReady = self.ready;\n          self.ready = _fullyReady;\n        } // Create an array of initialization states of the related localForages.\n\n\n        var initPromises = [];\n\n        function ignoreErrors() {\n          // Don't handle errors here,\n          // just makes sure related localForages aren't pending.\n          return Promise$1.resolve();\n        }\n\n        for (var j = 0; j < dbContext.forages.length; j++) {\n          var forage = dbContext.forages[j];\n\n          if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n          }\n        } // Take a snapshot of the related localForages.\n\n\n        var forages = dbContext.forages.slice(0); // Initialize the connection process only when\n        // all the related localForages aren't pending.\n\n        return Promise$1.all(initPromises).then(function () {\n          dbInfo.db = dbContext.db; // Get the connection or open a new one without upgrade.\n\n          return _getOriginalConnection(dbInfo);\n        }).then(function (db) {\n          dbInfo.db = db;\n\n          if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n          }\n\n          return db;\n        }).then(function (db) {\n          dbInfo.db = dbContext.db = db;\n          self._dbInfo = dbInfo; // Share the final connection amongst related localForages.\n\n          for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n\n            if (forage !== self) {\n              // Self is already up-to-date.\n              forage._dbInfo.db = dbInfo.db;\n              forage._dbInfo.version = dbInfo.version;\n            }\n          }\n        });\n      }\n\n      function getItem(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.get(key);\n\n                req.onsuccess = function () {\n                  var value = req.result;\n\n                  if (value === undefined) {\n                    value = null;\n                  }\n\n                  if (_isEncodedBlob(value)) {\n                    value = _decodeBlob(value);\n                  }\n\n                  resolve(value);\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Iterate over all items stored in database.\n\n\n      function iterate(iterator, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.openCursor();\n                var iterationNumber = 1;\n\n                req.onsuccess = function () {\n                  var cursor = req.result;\n\n                  if (cursor) {\n                    var value = cursor.value;\n\n                    if (_isEncodedBlob(value)) {\n                      value = _decodeBlob(value);\n                    }\n\n                    var result = iterator(value, cursor.key, iterationNumber++); // when the iterator callback retuns any\n                    // (non-`undefined`) value, then we stop\n                    // the iteration immediately\n\n                    if (result !== void 0) {\n                      resolve(result);\n                    } else {\n                      cursor[\"continue\"]();\n                    }\n                  } else {\n                    resolve();\n                  }\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function setItem(key, value, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          var dbInfo;\n          self.ready().then(function () {\n            dbInfo = self._dbInfo;\n\n            if (toString.call(value) === '[object Blob]') {\n              return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                if (blobSupport) {\n                  return value;\n                }\n\n                return _encodeBlob(value);\n              });\n            }\n\n            return value;\n          }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName); // The reason we don't _save_ null is because IE 10 does\n                // not support saving the `null` type in IndexedDB. How\n                // ironic, given the bug below!\n                // See: https://github.com/mozilla/localForage/issues/161\n\n                if (value === null) {\n                  value = undefined;\n                }\n\n                var req = store.put(value, key);\n\n                transaction.oncomplete = function () {\n                  // Cast to undefined so the value passed to\n                  // callback/promise is the same as what one would get out\n                  // of `getItem()` later. This leads to some weirdness\n                  // (setItem('foo', undefined) will return `null`), but\n                  // it's not my fault localStorage is our baseline and that\n                  // it's weird.\n                  if (value === undefined) {\n                    value = null;\n                  }\n\n                  resolve(value);\n                };\n\n                transaction.onabort = transaction.onerror = function () {\n                  var err = req.error ? req.error : req.transaction.error;\n                  reject(err);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function removeItem(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName); // We use a Grunt task to make this safe for IE and some\n                // versions of Android (including those used by Cordova).\n                // Normally IE won't like `.delete()` and will insist on\n                // using `['delete']()`, but we have a build step that\n                // fixes this for us now.\n\n                var req = store[\"delete\"](key);\n\n                transaction.oncomplete = function () {\n                  resolve();\n                };\n\n                transaction.onerror = function () {\n                  reject(req.error);\n                }; // The request will be also be aborted if we've exceeded our storage\n                // space.\n\n\n                transaction.onabort = function () {\n                  var err = req.error ? req.error : req.transaction.error;\n                  reject(err);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function clear(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.clear();\n\n                transaction.oncomplete = function () {\n                  resolve();\n                };\n\n                transaction.onabort = transaction.onerror = function () {\n                  var err = req.error ? req.error : req.transaction.error;\n                  reject(err);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function length(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.count();\n\n                req.onsuccess = function () {\n                  resolve(req.result);\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function key(n, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          if (n < 0) {\n            resolve(null);\n            return;\n          }\n\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var advanced = false;\n                var req = store.openCursor();\n\n                req.onsuccess = function () {\n                  var cursor = req.result;\n\n                  if (!cursor) {\n                    // this means there weren't enough keys\n                    resolve(null);\n                    return;\n                  }\n\n                  if (n === 0) {\n                    // We have the first key, return it if that's what they\n                    // wanted.\n                    resolve(cursor.key);\n                  } else {\n                    if (!advanced) {\n                      // Otherwise, ask the cursor to skip ahead n\n                      // records.\n                      advanced = true;\n                      cursor.advance(n);\n                    } else {\n                      // When we get here, we've got the nth key.\n                      resolve(cursor.key);\n                    }\n                  }\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.openCursor();\n                var keys = [];\n\n                req.onsuccess = function () {\n                  var cursor = req.result;\n\n                  if (!cursor) {\n                    resolve(keys);\n                    return;\n                  }\n\n                  keys.push(cursor.key);\n                  cursor[\"continue\"]();\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function dropInstance(options, callback) {\n        callback = getCallback.apply(this, arguments);\n        var currentConfig = this.config();\n        options = typeof options !== 'function' && options || {};\n\n        if (!options.name) {\n          options.name = options.name || currentConfig.name;\n          options.storeName = options.storeName || currentConfig.storeName;\n        }\n\n        var self = this;\n        var promise;\n\n        if (!options.name) {\n          promise = Promise$1.reject('Invalid arguments');\n        } else {\n          var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n          var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n\n            for (var i = 0; i < forages.length; i++) {\n              forages[i]._dbInfo.db = db;\n            }\n\n            return db;\n          });\n\n          if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n              _deferReadiness(options);\n\n              var dbContext = dbContexts[options.name];\n              var forages = dbContext.forages;\n              db.close();\n\n              for (var i = 0; i < forages.length; i++) {\n                var forage = forages[i];\n                forage._dbInfo.db = null;\n              }\n\n              var dropDBPromise = new Promise$1(function (resolve, reject) {\n                var req = idb.deleteDatabase(options.name);\n\n                req.onerror = req.onblocked = function (err) {\n                  var db = req.result;\n\n                  if (db) {\n                    db.close();\n                  }\n\n                  reject(err);\n                };\n\n                req.onsuccess = function () {\n                  var db = req.result;\n\n                  if (db) {\n                    db.close();\n                  }\n\n                  resolve(db);\n                };\n              });\n              return dropDBPromise.then(function (db) {\n                dbContext.db = db;\n\n                for (var i = 0; i < forages.length; i++) {\n                  var _forage = forages[i];\n\n                  _advanceReadiness(_forage._dbInfo);\n                }\n              })[\"catch\"](function (err) {\n                (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                throw err;\n              });\n            });\n          } else {\n            promise = dbPromise.then(function (db) {\n              if (!db.objectStoreNames.contains(options.storeName)) {\n                return;\n              }\n\n              var newVersion = db.version + 1;\n\n              _deferReadiness(options);\n\n              var dbContext = dbContexts[options.name];\n              var forages = dbContext.forages;\n              db.close();\n\n              for (var i = 0; i < forages.length; i++) {\n                var forage = forages[i];\n                forage._dbInfo.db = null;\n                forage._dbInfo.version = newVersion;\n              }\n\n              var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                var req = idb.open(options.name, newVersion);\n\n                req.onerror = function (err) {\n                  var db = req.result;\n                  db.close();\n                  reject(err);\n                };\n\n                req.onupgradeneeded = function () {\n                  var db = req.result;\n                  db.deleteObjectStore(options.storeName);\n                };\n\n                req.onsuccess = function () {\n                  var db = req.result;\n                  db.close();\n                  resolve(db);\n                };\n              });\n              return dropObjectPromise.then(function (db) {\n                dbContext.db = db;\n\n                for (var j = 0; j < forages.length; j++) {\n                  var _forage2 = forages[j];\n                  _forage2._dbInfo.db = db;\n\n                  _advanceReadiness(_forage2._dbInfo);\n                }\n              })[\"catch\"](function (err) {\n                (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                throw err;\n              });\n            });\n          }\n        }\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      var asyncStorage = {\n        _driver: 'asyncStorage',\n        _initStorage: _initStorage,\n        _support: isIndexedDBValid(),\n        iterate: iterate,\n        getItem: getItem,\n        setItem: setItem,\n        removeItem: removeItem,\n        clear: clear,\n        length: length,\n        key: key,\n        keys: keys,\n        dropInstance: dropInstance\n      };\n\n      function isWebSQLValid() {\n        return typeof openDatabase === 'function';\n      } // Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n      // it to Base64, so this is how we store it to prevent very strange errors with less\n      // verbose ways of binary <-> string data storage.\n\n\n      var BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n      var BLOB_TYPE_PREFIX = '~~local_forage_type~';\n      var BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n      var SERIALIZED_MARKER = '__lfsc__:';\n      var SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length; // OMG the serializations!\n\n      var TYPE_ARRAYBUFFER = 'arbf';\n      var TYPE_BLOB = 'blob';\n      var TYPE_INT8ARRAY = 'si08';\n      var TYPE_UINT8ARRAY = 'ui08';\n      var TYPE_UINT8CLAMPEDARRAY = 'uic8';\n      var TYPE_INT16ARRAY = 'si16';\n      var TYPE_INT32ARRAY = 'si32';\n      var TYPE_UINT16ARRAY = 'ur16';\n      var TYPE_UINT32ARRAY = 'ui32';\n      var TYPE_FLOAT32ARRAY = 'fl32';\n      var TYPE_FLOAT64ARRAY = 'fl64';\n      var TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n      var toString$1 = Object.prototype.toString;\n\n      function stringToBuffer(serializedString) {\n        // Fill the string into a ArrayBuffer.\n        var bufferLength = serializedString.length * 0.75;\n        var len = serializedString.length;\n        var i;\n        var p = 0;\n        var encoded1, encoded2, encoded3, encoded4;\n\n        if (serializedString[serializedString.length - 1] === '=') {\n          bufferLength--;\n\n          if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n          }\n        }\n\n        var buffer = new ArrayBuffer(bufferLength);\n        var bytes = new Uint8Array(buffer);\n\n        for (i = 0; i < len; i += 4) {\n          encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n          encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n          encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n          encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n          /*jslint bitwise: true */\n\n          bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n          bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n          bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n        }\n\n        return buffer;\n      } // Converts a buffer to a string to store, serialized, in the backend\n      // storage library.\n\n\n      function bufferToString(buffer) {\n        // base64-arraybuffer\n        var bytes = new Uint8Array(buffer);\n        var base64String = '';\n        var i;\n\n        for (i = 0; i < bytes.length; i += 3) {\n          /*jslint bitwise: true */\n          base64String += BASE_CHARS[bytes[i] >> 2];\n          base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n          base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n          base64String += BASE_CHARS[bytes[i + 2] & 63];\n        }\n\n        if (bytes.length % 3 === 2) {\n          base64String = base64String.substring(0, base64String.length - 1) + '=';\n        } else if (bytes.length % 3 === 1) {\n          base64String = base64String.substring(0, base64String.length - 2) + '==';\n        }\n\n        return base64String;\n      } // Serialize a value, afterwards executing a callback (which usually\n      // instructs the `setItem()` callback/promise to be executed). This is how\n      // we store binary data with localStorage.\n\n\n      function serialize(value, callback) {\n        var valueType = '';\n\n        if (value) {\n          valueType = toString$1.call(value);\n        } // Cannot use `value instanceof ArrayBuffer` or such here, as these\n        // checks fail when running the tests using casper.js...\n        //\n        // TODO: See why those tests fail and use a better solution.\n\n\n        if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n          // Convert binary arrays to a string and prefix the string with\n          // a special marker.\n          var buffer;\n          var marker = SERIALIZED_MARKER;\n\n          if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n          } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n              marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n              marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n              marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n              marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n              marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n              marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n              marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n              marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n              marker += TYPE_FLOAT64ARRAY;\n            } else {\n              callback(new Error('Failed to get type for BinaryArray'));\n            }\n          }\n\n          callback(marker + bufferToString(buffer));\n        } else if (valueType === '[object Blob]') {\n          // Conver the blob to a binaryArray and then to a string.\n          var fileReader = new FileReader();\n\n          fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n          };\n\n          fileReader.readAsArrayBuffer(value);\n        } else {\n          try {\n            callback(JSON.stringify(value));\n          } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n            callback(null, e);\n          }\n        }\n      } // Deserialize data we've inserted into a value column/field. We place\n      // special markers into our strings to mark them as encoded; this isn't\n      // as nice as a meta field, but it's the only sane thing we can do whilst\n      // keeping localStorage support intact.\n      //\n      // Oftentimes this will just deserialize JSON content, but if we have a\n      // special marker (SERIALIZED_MARKER, defined above), we will extract\n      // some kind of arraybuffer/binary data/typed array out of the string.\n\n\n      function deserialize(value) {\n        // If we haven't marked this string as being specially serialized (i.e.\n        // something other than serialized JSON), we can just return it and be\n        // done with it.\n        if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n          return JSON.parse(value);\n        } // The following code deals with deserializing some kind of Blob or\n        // TypedArray. First we separate out the type of data we're dealing\n        // with from the data itself.\n\n\n        var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n        var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n        var blobType; // Backwards-compatible blob type serialization strategy.\n        // DBs created with older versions of localForage will simply not have the blob type.\n\n        if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n          var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n          blobType = matcher[1];\n          serializedString = serializedString.substring(matcher[0].length);\n        }\n\n        var buffer = stringToBuffer(serializedString); // Return the right type based on the code/type set during\n        // serialization.\n\n        switch (type) {\n          case TYPE_ARRAYBUFFER:\n            return buffer;\n\n          case TYPE_BLOB:\n            return createBlob([buffer], {\n              type: blobType\n            });\n\n          case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n\n          case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n\n          case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n\n          case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n\n          case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n\n          case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n\n          case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n\n          case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n\n          case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n\n          default:\n            throw new Error('Unkown type: ' + type);\n        }\n      }\n\n      var localforageSerializer = {\n        serialize: serialize,\n        deserialize: deserialize,\n        stringToBuffer: stringToBuffer,\n        bufferToString: bufferToString\n      };\n      /*\n       * Includes code from:\n       *\n       * base64-arraybuffer\n       * https://github.com/niklasvh/base64-arraybuffer\n       *\n       * Copyright (c) 2012 Niklas von Hertzen\n       * Licensed under the MIT license.\n       */\n\n      function createDbTable(t, dbInfo, callback, errorCallback) {\n        t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n      } // Open the WebSQL database (automatically creates one if one didn't\n      // previously exist), using any options set in the config.\n\n\n      function _initStorage$1(options) {\n        var self = this;\n        var dbInfo = {\n          db: null\n        };\n\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n          }\n        }\n\n        var dbInfoPromise = new Promise$1(function (resolve, reject) {\n          // Open the database; the openDatabase API will automatically\n          // create it for us if it doesn't exist.\n          try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n          } catch (e) {\n            return reject(e);\n          } // Create our key/value table if it doesn't exist.\n\n\n          dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n              self._dbInfo = dbInfo;\n              resolve();\n            }, function (t, error) {\n              reject(error);\n            });\n          }, reject);\n        });\n        dbInfo.serializer = localforageSerializer;\n        return dbInfoPromise;\n      }\n\n      function tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n        t.executeSql(sqlStatement, args, callback, function (t, error) {\n          if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [name], function (t, results) {\n              if (!results.rows.length) {\n                // if the table is missing (was deleted)\n                // re-create it table and retry\n                createDbTable(t, dbInfo, function () {\n                  t.executeSql(sqlStatement, args, callback, errorCallback);\n                }, errorCallback);\n              } else {\n                errorCallback(t, error);\n              }\n            }, errorCallback);\n          } else {\n            errorCallback(t, error);\n          }\n        }, errorCallback);\n      }\n\n      function getItem$1(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                var result = results.rows.length ? results.rows.item(0).value : null; // Check to see if this is serialized content we need to\n                // unpack.\n\n                if (result) {\n                  result = dbInfo.serializer.deserialize(result);\n                }\n\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function iterate$1(iterator, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                var rows = results.rows;\n                var length = rows.length;\n\n                for (var i = 0; i < length; i++) {\n                  var item = rows.item(i);\n                  var result = item.value; // Check to see if this is serialized content\n                  // we need to unpack.\n\n                  if (result) {\n                    result = dbInfo.serializer.deserialize(result);\n                  }\n\n                  result = iterator(result, item.key, i + 1); // void(0) prevents problems with redefinition\n                  // of `undefined`.\n\n                  if (result !== void 0) {\n                    resolve(result);\n                    return;\n                  }\n                }\n\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function _setItem(key, value, callback, retriesLeft) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n              value = null;\n            } // Save the original value to pass to the callback.\n\n\n            var originalValue = value;\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n              if (error) {\n                reject(error);\n              } else {\n                dbInfo.db.transaction(function (t) {\n                  tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                    resolve(originalValue);\n                  }, function (t, error) {\n                    reject(error);\n                  });\n                }, function (sqlError) {\n                  // The transaction failed; check\n                  // to see if it's a quota error.\n                  if (sqlError.code === sqlError.QUOTA_ERR) {\n                    // We reject the callback outright for now, but\n                    // it's worth trying to re-run the transaction.\n                    // Even if the user accepts the prompt to use\n                    // more storage on Safari, this error will\n                    // be called.\n                    //\n                    // Try to re-run the transaction.\n                    if (retriesLeft > 0) {\n                      resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                      return;\n                    }\n\n                    reject(sqlError);\n                  }\n                });\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function setItem$1(key, value, callback) {\n        return _setItem.apply(this, [key, value, callback, 1]);\n      }\n\n      function removeItem$1(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Deletes every item in the table.\n      // TODO: Find out if this resets the AUTO_INCREMENT number.\n\n\n      function clear$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Does a simple `COUNT(key)` to get the number of items stored in\n      // localForage.\n\n\n      function length$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              // Ahhh, SQL makes this one soooooo easy.\n              tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                var result = results.rows.item(0).c;\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Return the key located at key index X; essentially gets the key from a\n      // `WHERE id = ?`. This is the most efficient way I can think to implement\n      // this rarely-used (in my experience) part of the API, but it can seem\n      // inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n      // the ID of each key will change every time it's updated. Perhaps a stored\n      // procedure for the `setItem()` SQL would solve this problem?\n      // TODO: Don't change ID on `setItem()`.\n\n\n      function key$1(n, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                var result = results.rows.length ? results.rows.item(0).key : null;\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                var keys = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                  keys.push(results.rows.item(i).key);\n                }\n\n                resolve(keys);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // https://www.w3.org/TR/webdatabase/#databases\n      // > There is no way to enumerate or delete the databases available for an origin from this API.\n\n\n      function getAllStoreNames(db) {\n        return new Promise$1(function (resolve, reject) {\n          db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n              var storeNames = [];\n\n              for (var i = 0; i < results.rows.length; i++) {\n                storeNames.push(results.rows.item(i).name);\n              }\n\n              resolve({\n                db: db,\n                storeNames: storeNames\n              });\n            }, function (t, error) {\n              reject(error);\n            });\n          }, function (sqlError) {\n            reject(sqlError);\n          });\n        });\n      }\n\n      function dropInstance$1(options, callback) {\n        callback = getCallback.apply(this, arguments);\n        var currentConfig = this.config();\n        options = typeof options !== 'function' && options || {};\n\n        if (!options.name) {\n          options.name = options.name || currentConfig.name;\n          options.storeName = options.storeName || currentConfig.storeName;\n        }\n\n        var self = this;\n        var promise;\n\n        if (!options.name) {\n          promise = Promise$1.reject('Invalid arguments');\n        } else {\n          promise = new Promise$1(function (resolve) {\n            var db;\n\n            if (options.name === currentConfig.name) {\n              // use the db reference of the current instance\n              db = self._dbInfo.db;\n            } else {\n              db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n              // drop all database tables\n              resolve(getAllStoreNames(db));\n            } else {\n              resolve({\n                db: db,\n                storeNames: [options.storeName]\n              });\n            }\n          }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n              operationInfo.db.transaction(function (t) {\n                function dropTable(storeName) {\n                  return new Promise$1(function (resolve, reject) {\n                    t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                      resolve();\n                    }, function (t, error) {\n                      reject(error);\n                    });\n                  });\n                }\n\n                var operations = [];\n\n                for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                  operations.push(dropTable(operationInfo.storeNames[i]));\n                }\n\n                Promise$1.all(operations).then(function () {\n                  resolve();\n                })[\"catch\"](function (e) {\n                  reject(e);\n                });\n              }, function (sqlError) {\n                reject(sqlError);\n              });\n            });\n          });\n        }\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      var webSQLStorage = {\n        _driver: 'webSQLStorage',\n        _initStorage: _initStorage$1,\n        _support: isWebSQLValid(),\n        iterate: iterate$1,\n        getItem: getItem$1,\n        setItem: setItem$1,\n        removeItem: removeItem$1,\n        clear: clear$1,\n        length: length$1,\n        key: key$1,\n        keys: keys$1,\n        dropInstance: dropInstance$1\n      };\n\n      function isLocalStorageValid() {\n        try {\n          return typeof localStorage !== 'undefined' && 'setItem' in localStorage && // in IE8 typeof localStorage.setItem === 'object'\n          !!localStorage.setItem;\n        } catch (e) {\n          return false;\n        }\n      }\n\n      function _getKeyPrefix(options, defaultConfig) {\n        var keyPrefix = options.name + '/';\n\n        if (options.storeName !== defaultConfig.storeName) {\n          keyPrefix += options.storeName + '/';\n        }\n\n        return keyPrefix;\n      } // Check if localStorage throws when saving an item\n\n\n      function checkIfLocalStorageThrows() {\n        var localStorageTestKey = '_localforage_support_test';\n\n        try {\n          localStorage.setItem(localStorageTestKey, true);\n          localStorage.removeItem(localStorageTestKey);\n          return false;\n        } catch (e) {\n          return true;\n        }\n      } // Check if localStorage is usable and allows to save an item\n      // This method checks if localStorage is usable in Safari Private Browsing\n      // mode, or in any other case where the available quota for localStorage\n      // is 0 and there wasn't any saved items yet.\n\n\n      function _isLocalStorageUsable() {\n        return !checkIfLocalStorageThrows() || localStorage.length > 0;\n      } // Config the localStorage backend, using options set in the config.\n\n\n      function _initStorage$2(options) {\n        var self = this;\n        var dbInfo = {};\n\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = options[i];\n          }\n        }\n\n        dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n        if (!_isLocalStorageUsable()) {\n          return Promise$1.reject();\n        }\n\n        self._dbInfo = dbInfo;\n        dbInfo.serializer = localforageSerializer;\n        return Promise$1.resolve();\n      } // Remove all keys from the datastore, effectively destroying all data in\n      // the app's key/value store!\n\n\n      function clear$2(callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var keyPrefix = self._dbInfo.keyPrefix;\n\n          for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n              localStorage.removeItem(key);\n            }\n          }\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Retrieve an item from the store. Unlike the original async_storage\n      // library in Gaia, we don't modify return values at all. If a key's value\n      // is `undefined`, we pass that value to the callback function.\n\n\n      function getItem$2(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var result = localStorage.getItem(dbInfo.keyPrefix + key); // If a result was found, parse it from the serialized\n          // string into a JS object. If result isn't truthy, the key\n          // is likely undefined and we'll pass it straight to the\n          // callback.\n\n          if (result) {\n            result = dbInfo.serializer.deserialize(result);\n          }\n\n          return result;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Iterate over all items in the store.\n\n\n      function iterate$2(iterator, callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var keyPrefix = dbInfo.keyPrefix;\n          var keyPrefixLength = keyPrefix.length;\n          var length = localStorage.length; // We use a dedicated iterator instead of the `i` variable below\n          // so other keys we fetch in localStorage aren't counted in\n          // the `iterationNumber` argument passed to the `iterate()`\n          // callback.\n          //\n          // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n\n          var iterationNumber = 1;\n\n          for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) !== 0) {\n              continue;\n            }\n\n            var value = localStorage.getItem(key); // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n\n            if (value) {\n              value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n              return value;\n            }\n          }\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Same as localStorage's key() method, except takes a callback.\n\n\n      function key$2(n, callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var result;\n\n          try {\n            result = localStorage.key(n);\n          } catch (error) {\n            result = null;\n          } // Remove the prefix from the key, if a key is found.\n\n\n          if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n          }\n\n          return result;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys$2(callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var length = localStorage.length;\n          var keys = [];\n\n          for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n              keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n          }\n\n          return keys;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Supply the number of keys in the datastore to the callback function.\n\n\n      function length$2(callback) {\n        var self = this;\n        var promise = self.keys().then(function (keys) {\n          return keys.length;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Remove an item from the store, nice and simple.\n\n\n      function removeItem$2(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          localStorage.removeItem(dbInfo.keyPrefix + key);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Set a key's value and run an optional callback once the value is set.\n      // Unlike Gaia's implementation, the callback function is passed the value,\n      // in case you want to operate on that value only after you're sure it\n      // saved, or something like that.\n\n\n      function setItem$2(key, value, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = self.ready().then(function () {\n          // Convert undefined values to null.\n          // https://github.com/mozilla/localForage/pull/42\n          if (value === undefined) {\n            value = null;\n          } // Save the original value to pass to the callback.\n\n\n          var originalValue = value;\n          return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n              if (error) {\n                reject(error);\n              } else {\n                try {\n                  localStorage.setItem(dbInfo.keyPrefix + key, value);\n                  resolve(originalValue);\n                } catch (e) {\n                  // localStorage capacity exceeded.\n                  // TODO: Make this a specific error/event.\n                  if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                    reject(e);\n                  }\n\n                  reject(e);\n                }\n              }\n            });\n          });\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function dropInstance$2(options, callback) {\n        callback = getCallback.apply(this, arguments);\n        options = typeof options !== 'function' && options || {};\n\n        if (!options.name) {\n          var currentConfig = this.config();\n          options.name = options.name || currentConfig.name;\n          options.storeName = options.storeName || currentConfig.storeName;\n        }\n\n        var self = this;\n        var promise;\n\n        if (!options.name) {\n          promise = Promise$1.reject('Invalid arguments');\n        } else {\n          promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n              resolve(options.name + '/');\n            } else {\n              resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n          }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n              var key = localStorage.key(i);\n\n              if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n              }\n            }\n          });\n        }\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      var localStorageWrapper = {\n        _driver: 'localStorageWrapper',\n        _initStorage: _initStorage$2,\n        _support: isLocalStorageValid(),\n        iterate: iterate$2,\n        getItem: getItem$2,\n        setItem: setItem$2,\n        removeItem: removeItem$2,\n        clear: clear$2,\n        length: length$2,\n        key: key$2,\n        keys: keys$2,\n        dropInstance: dropInstance$2\n      };\n\n      var sameValue = function sameValue(x, y) {\n        return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n      };\n\n      var includes = function includes(array, searchElement) {\n        var len = array.length;\n        var i = 0;\n\n        while (i < len) {\n          if (sameValue(array[i], searchElement)) {\n            return true;\n          }\n\n          i++;\n        }\n\n        return false;\n      };\n\n      var isArray = Array.isArray || function (arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n      }; // Drivers are stored here when `defineDriver()` is called.\n      // They are shared across all instances of localForage.\n\n\n      var DefinedDrivers = {};\n      var DriverSupport = {};\n      var DefaultDrivers = {\n        INDEXEDDB: asyncStorage,\n        WEBSQL: webSQLStorage,\n        LOCALSTORAGE: localStorageWrapper\n      };\n      var DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n      var OptionalDriverMethods = ['dropInstance'];\n      var LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n      var DefaultConfig = {\n        description: '',\n        driver: DefaultDriverOrder.slice(),\n        name: 'localforage',\n        // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n        // we can use without a prompt.\n        size: 4980736,\n        storeName: 'keyvaluepairs',\n        version: 1.0\n      };\n\n      function callWhenReady(localForageInstance, libraryMethod) {\n        localForageInstance[libraryMethod] = function () {\n          var _args = arguments;\n          return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n          });\n        };\n      }\n\n      function extend() {\n        for (var i = 1; i < arguments.length; i++) {\n          var arg = arguments[i];\n\n          if (arg) {\n            for (var _key in arg) {\n              if (arg.hasOwnProperty(_key)) {\n                if (isArray(arg[_key])) {\n                  arguments[0][_key] = arg[_key].slice();\n                } else {\n                  arguments[0][_key] = arg[_key];\n                }\n              }\n            }\n          }\n        }\n\n        return arguments[0];\n      }\n\n      var LocalForage = function () {\n        function LocalForage(options) {\n          _classCallCheck(this, LocalForage);\n\n          for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n              var driver = DefaultDrivers[driverTypeKey];\n              var driverName = driver._driver;\n              this[driverTypeKey] = driverName;\n\n              if (!DefinedDrivers[driverName]) {\n                // we don't need to wait for the promise,\n                // since the default drivers can be defined\n                // in a blocking manner\n                this.defineDriver(driver);\n              }\n            }\n          }\n\n          this._defaultConfig = extend({}, DefaultConfig);\n          this._config = extend({}, this._defaultConfig, options);\n          this._driverSet = null;\n          this._initDriver = null;\n          this._ready = false;\n          this._dbInfo = null;\n\n          this._wrapLibraryMethodsWithReady();\n\n          this.setDriver(this._config.driver)[\"catch\"](function () {});\n        } // Set any config values for localForage; can be called anytime before\n        // the first API call (e.g. `getItem`, `setItem`).\n        // We loop through options so we don't overwrite existing config\n        // values.\n\n\n        LocalForage.prototype.config = function config(options) {\n          // If the options argument is an object, we use it to set values.\n          // Otherwise, we return either a specified config value or all\n          // config values.\n          if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n              return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n              if (i === 'storeName') {\n                options[i] = options[i].replace(/\\W/g, '_');\n              }\n\n              if (i === 'version' && typeof options[i] !== 'number') {\n                return new Error('Database version must be a number.');\n              }\n\n              this._config[i] = options[i];\n            } // after all config options are set and\n            // the driver option is used, try setting it\n\n\n            if ('driver' in options && options.driver) {\n              return this.setDriver(this._config.driver);\n            }\n\n            return true;\n          } else if (typeof options === 'string') {\n            return this._config[options];\n          } else {\n            return this._config;\n          }\n        }; // Used to define a custom driver, shared across all instances of\n        // localForage.\n\n\n        LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n          var promise = new Promise$1(function (resolve, reject) {\n            try {\n              var driverName = driverObject._driver;\n              var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver'); // A driver name should be defined and not overlap with the\n              // library-defined, default drivers.\n\n              if (!driverObject._driver) {\n                reject(complianceError);\n                return;\n              }\n\n              var driverMethods = LibraryMethods.concat('_initStorage');\n\n              for (var i = 0, len = driverMethods.length; i < len; i++) {\n                var driverMethodName = driverMethods[i]; // when the property is there,\n                // it should be a method even when optional\n\n                var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n\n                if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                  reject(complianceError);\n                  return;\n                }\n              }\n\n              var configureMissingMethods = function configureMissingMethods() {\n                var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                  return function () {\n                    var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                    var promise = Promise$1.reject(error);\n                    executeCallback(promise, arguments[arguments.length - 1]);\n                    return promise;\n                  };\n                };\n\n                for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                  var optionalDriverMethod = OptionalDriverMethods[_i];\n\n                  if (!driverObject[optionalDriverMethod]) {\n                    driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                  }\n                }\n              };\n\n              configureMissingMethods();\n\n              var setDriverSupport = function setDriverSupport(support) {\n                if (DefinedDrivers[driverName]) {\n                  console.info('Redefining LocalForage driver: ' + driverName);\n                }\n\n                DefinedDrivers[driverName] = driverObject;\n                DriverSupport[driverName] = support; // don't use a then, so that we can define\n                // drivers that have simple _support methods\n                // in a blocking manner\n\n                resolve();\n              };\n\n              if ('_support' in driverObject) {\n                if (driverObject._support && typeof driverObject._support === 'function') {\n                  driverObject._support().then(setDriverSupport, reject);\n                } else {\n                  setDriverSupport(!!driverObject._support);\n                }\n              } else {\n                setDriverSupport(true);\n              }\n            } catch (e) {\n              reject(e);\n            }\n          });\n          executeTwoCallbacks(promise, callback, errorCallback);\n          return promise;\n        };\n\n        LocalForage.prototype.driver = function driver() {\n          return this._driver || null;\n        };\n\n        LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n          var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n          executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n          return getDriverPromise;\n        };\n\n        LocalForage.prototype.getSerializer = function getSerializer(callback) {\n          var serializerPromise = Promise$1.resolve(localforageSerializer);\n          executeTwoCallbacks(serializerPromise, callback);\n          return serializerPromise;\n        };\n\n        LocalForage.prototype.ready = function ready(callback) {\n          var self = this;\n\n          var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n              self._ready = self._initDriver();\n            }\n\n            return self._ready;\n          });\n\n          executeTwoCallbacks(promise, callback, callback);\n          return promise;\n        };\n\n        LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n          var self = this;\n\n          if (!isArray(drivers)) {\n            drivers = [drivers];\n          }\n\n          var supportedDrivers = this._getSupportedDrivers(drivers);\n\n          function setDriverToConfig() {\n            self._config.driver = self.driver();\n          }\n\n          function extendSelfWithDriver(driver) {\n            self._extend(driver);\n\n            setDriverToConfig();\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n          }\n\n          function initDriver(supportedDrivers) {\n            return function () {\n              var currentDriverIndex = 0;\n\n              function driverPromiseLoop() {\n                while (currentDriverIndex < supportedDrivers.length) {\n                  var driverName = supportedDrivers[currentDriverIndex];\n                  currentDriverIndex++;\n                  self._dbInfo = null;\n                  self._ready = null;\n                  return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                }\n\n                setDriverToConfig();\n                var error = new Error('No available storage method found.');\n                self._driverSet = Promise$1.reject(error);\n                return self._driverSet;\n              }\n\n              return driverPromiseLoop();\n            };\n          } // There might be a driver initialization in progress\n          // so wait for it to finish in order to avoid a possible\n          // race condition to set _dbInfo\n\n\n          var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n          }) : Promise$1.resolve();\n          this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n            return self.getDriver(driverName).then(function (driver) {\n              self._driver = driver._driver;\n              setDriverToConfig();\n\n              self._wrapLibraryMethodsWithReady();\n\n              self._initDriver = initDriver(supportedDrivers);\n            });\n          })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n          });\n          executeTwoCallbacks(this._driverSet, callback, errorCallback);\n          return this._driverSet;\n        };\n\n        LocalForage.prototype.supports = function supports(driverName) {\n          return !!DriverSupport[driverName];\n        };\n\n        LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n          extend(this, libraryMethodsAndProperties);\n        };\n\n        LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n          var supportedDrivers = [];\n\n          for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n\n            if (this.supports(driverName)) {\n              supportedDrivers.push(driverName);\n            }\n          }\n\n          return supportedDrivers;\n        };\n\n        LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n          // Add a stub for each driver API method that delays the call to the\n          // corresponding driver method until localForage is ready. These stubs\n          // will be replaced by the driver methods as soon as the driver is\n          // loaded, so there is no performance impact.\n          for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n          }\n        };\n\n        LocalForage.prototype.createInstance = function createInstance(options) {\n          return new LocalForage(options);\n        };\n\n        return LocalForage;\n      }(); // The actual localForage object that we expose as a module or via a\n      // global. It's extended by pulling in one of our other libraries.\n\n\n      var localforage_js = new LocalForage();\n      module.exports = localforage_js;\n    }, {\n      \"3\": 3\n    }]\n  }, {}, [4])(4);\n});","map":{"version":3,"names":["f","exports","module","define","amd","g","window","global","self","localforage","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","_dereq_","Mutation","MutationObserver","WebKitMutationObserver","scheduleDrain","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","channel","port1","onmessage","port2","postMessage","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","draining","queue","oldQueue","len","immediate","task","push","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","prototype","onRejected","then","onFulfilled","promise","constructor","unwrap","QueueItem","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","value","resolve","reject","func","returnValue","result","tryCatch","getThen","status","thenable","error","obj","appyThen","apply","arguments","onError","onSuccess","tryToUnwrap","out","reason","all","iterable","Object","toString","values","Array","resolved","allResolver","resolveFromAll","outValue","race","response","_typeof","Symbol","iterator","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","indexOf","IDBKeyRange","createBlob","parts","properties","Blob","name","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","target","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","arrayBuff","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","mode","retries","undefined","tx","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","getItem","store","req","get","iterate","openCursor","iterationNumber","cursor","setItem","blobSupport","removeItem","clear","count","advanced","advance","keys","dropInstance","currentConfig","config","isCurrentDb","dbPromise","dropDBPromise","deleteDatabase","onblocked","_forage","dropObjectPromise","deleteObjectStore","_forage2","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","bufferLength","p","encoded1","encoded2","encoded3","encoded4","buffer","bytes","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","getItem$1","item","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","c","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","isNaN","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","isRequired","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js"],"sources":["/home/zining/Data/Proyectos/Ionic/UT1-pgl/frontend/node_modules/localforage/dist/localforage.js"],"sourcesContent":["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.1\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback retuns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [name], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}